{"ast":null,"code":"var _jsxFileName = \"/Users/francisbonacic/Desktop/React/sleep-tracker/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport LogIn from './components/LogIn';\nimport SignUp from './components/SignUp';\nimport { Route } from 'react-router-dom';\nimport formSchema from './validation/formSchema';\nimport './App.css';\n\nconst App = () => {\n  //initial state\n  const [logInState, setLogInState] = useState({\n    username: \"\",\n    password: \"\"\n  }); //state for Errors\n\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\"\n  }); //button state\n\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  useEffect(() => {\n    formSchema.isValid(logInState).then(valid => {\n      setButtonDisabled(!valid);\n    });\n  }, [logInState]); //post state\n\n  const [post, setPost] = useState([]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LogIn, {\n    logInState: logInState,\n    setLogInState: setLogInState,\n    errors: errors,\n    setErrors: setErrors,\n    buttonDisabled: buttonDisabled,\n    post: post,\n    setPost: setPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SignUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/francisbonacic/Desktop/React/sleep-tracker/src/App.js"],"names":["React","useState","useEffect","LogIn","SignUp","Route","formSchema","App","logInState","setLogInState","username","password","errors","setErrors","buttonDisabled","setButtonDisabled","isValid","then","valid","post","setPost"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC;AAE3CS,IAAAA,QAAQ,EAAE,EAFiC;AAG3CC,IAAAA,QAAQ,EAAC;AAHkC,GAAD,CAA5C,CAHgB,CAUhB;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC;AAEnCS,IAAAA,QAAQ,EAAE,EAFyB;AAGnCC,IAAAA,QAAQ,EAAC;AAH0B,GAAD,CAApC,CAXgB,CAkBhB;;AACF,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,IAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChBI,IAAAA,UAAU,CAACU,OAAX,CAAmBR,UAAnB,EAA+BS,IAA/B,CAAoCC,KAAK,IAAI;AAC3CH,MAAAA,iBAAiB,CAAC,CAACG,KAAF,CAAjB;AACD,KAFD;AAGC,GAJQ,EAIP,CAACV,UAAD,CAJO,CAAT,CArBkB,CA2BlB;;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AAEE,sBACC,uDACC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AACA,IAAA,UAAU,EAAEO,UADZ;AAEA,IAAA,aAAa,EAAEC,aAFf;AAGA,IAAA,MAAM,EAAEG,MAHR;AAIA,IAAA,SAAS,EAAEC,SAJX;AAKA,IAAA,cAAc,EAAEC,cALhB;AAMA,IAAA,IAAI,EAAEK,IANN;AAOA,IAAA,OAAO,EAAEC,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADD,eAaC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAbD,CADD;AAqBD,CAnDD;;AAqDA,eAAeb,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LogIn from './components/LogIn';\nimport SignUp from './components/SignUp';\nimport { Route } from 'react-router-dom';\nimport formSchema from './validation/formSchema';\nimport './App.css';\n\nconst App = () => {\n\n  //initial state\n  const [logInState, setLogInState] = useState({\n\n    username: \"\",\n    password:\"\",\n\n  });\n\n  //state for Errors\n  const [errors, setErrors] = useState({\n\n    username: \"\",\n    password:\"\",\n\n  });\n\n  //button state\nconst [buttonDisabled, setButtonDisabled] = useState(true);\n\nuseEffect(() => {\nformSchema.isValid(logInState).then(valid => {\n  setButtonDisabled(!valid)\n})\n},[logInState]);\n\n//post state\nconst [post, setPost] = useState([]);\n\n  return (\n   <>\n    <Route exact path=\"/\">\n    <LogIn \n    logInState={logInState}\n    setLogInState={setLogInState}\n    errors={errors}\n    setErrors={setErrors}\n    buttonDisabled={buttonDisabled}\n    post={post}\n    setPost={setPost}\n     />\n    </Route>\n\n    <Route path=\"/signup\">\n    <SignUp />\n    </Route>\n\n  </>  \n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}