{"ast":null,"code":"var _jsxFileName = \"/Users/francisbonacic/Desktop/React/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport LogIn from './components/LogIn';\nimport SignUp from './components/Signup';\nimport { Route } from 'react-router-dom';\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport formSchema from './validation/formSchema';\nimport schema from \"./components/validation/signSchema\";\nimport './App.css'; //signup Form \n\nconst initialFormValues = {\n  username: \"\",\n  email: \"\",\n  fName: \"\",\n  lName: \"\",\n  password: \"\"\n};\nconst initialFormErrors = {\n  username: \"\",\n  email: \"\",\n  fName: \"\",\n  lName: \"\",\n  password: \"\"\n};\nconst initialUsers = [];\nconst initialDisabled = true;\n\nconst App = () => {\n  const [users, setUsers] = useState(initialUsers);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const getUsers = () => {\n    axios.get(\"https://reqres.in/api/users\").then(res => {\n      setUsers(res.data);\n    }).catch(err => {\n      debugger;\n      console.log(err);\n    });\n  };\n\n  const postNewUser = newUser => {\n    axios.post(\"https://reqres.in/api/users\", newUser).then(res => {\n      setUsers([...users, res.data]);\n      setFormValues(initialFormValues);\n    }).catch(err => {\n      debugger;\n      console.log(err);\n    }).finally(() => {// this woudl be tbe good spot to clean the form\n    });\n  };\n\n  const validate = (name, value) => {\n    yup.reach(schema, name).validate(value).then(valid => {\n      setFormErrors({ ...formErrors,\n        [name]: \"\"\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n  };\n\n  const inputChange = (name, value) => {\n    validate(name, value);\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const formSubmit = () => {\n    const newUser = {\n      username: formValues.username.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      fName: formValues.fName.trim(),\n      lName: formValues.lName.trim()\n    };\n    postNewUser(newUser);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]); ///log in form \n  //initial state\n\n  const [logInState, setLogInState] = useState({\n    username: \"\",\n    password: \"\"\n  }); //state for Errors\n\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\"\n  }); //button state\n\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  useEffect(() => {\n    formSchema.isValid(logInState).then(valid => {\n      setButtonDisabled(!valid);\n    });\n  }, [logInState]); //post state\n\n  const [post, setPost] = useState([]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LogIn, {\n    logInState: logInState,\n    setLogInState: setLogInState,\n    errors: errors,\n    setErrors: setErrors,\n    buttonDisabled: buttonDisabled,\n    post: post,\n    setPost: setPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SignUp, {\n    users: users,\n    setUsers: setUsers,\n    formValues: formValues,\n    setFormValues: setFormValues,\n    formErrors: formErrors,\n    setFormErrors: setFormErrors,\n    disabled: disabled,\n    setDisabled: setDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/francisbonacic/Desktop/React/src/App.js"],"names":["React","useState","useEffect","LogIn","SignUp","Route","axios","yup","formSchema","schema","initialFormValues","username","email","fName","lName","password","initialFormErrors","initialUsers","initialDisabled","App","users","setUsers","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","getUsers","get","then","res","data","catch","err","console","log","postNewUser","newUser","post","finally","validate","name","value","reach","valid","errors","inputChange","formSubmit","trim","isValid","logInState","setLogInState","setErrors","buttonDisabled","setButtonDisabled","setPost"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport LogIn from './components/LogIn';\nimport SignUp from './components/Signup';\nimport { Route } from 'react-router-dom';\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport formSchema from './validation/formSchema';\nimport schema from \"./components/validation/signSchema\";\nimport './App.css';\n\n  //signup Form \n\nconst initialFormValues = {\n  username: \"\",\n  email: \"\",\n  fName: \"\",\n  lName: \"\",\n  password: \"\",\n};\n\nconst initialFormErrors = {\n  username: \"\",\n  email: \"\",\n  fName: \"\",\n  lName: \"\",\n  password: \"\",\n};\n\nconst initialUsers = [];\nconst initialDisabled = true;\n    \nconst App = () => {\n const [users, setUsers] = useState(initialUsers);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n     const getUsers = () => {\n    axios\n      .get(\"https://reqres.in/api/users\")\n      .then((res) => {\n        setUsers(res.data);\n      })\n      .catch((err) => {\n        debugger;\n        console.log(err);\n      });\n  };\n\n  const postNewUser = (newUser) => {\n    axios\n      .post(\"https://reqres.in/api/users\", newUser)\n      .then((res) => {\n        setUsers([...users, res.data]);\n        setFormValues(initialFormValues);\n      })\n      .catch((err) => {\n        debugger;\n        console.log(err);\n      })\n      .finally(() => {\n        // this woudl be tbe good spot to clean the form\n      });\n  };\n\n  const validate = (name, value) => {\n    yup\n      .reach(schema, name)\n\n      .validate(value)\n\n      .then((valid) => {\n        setFormErrors({\n          ...formErrors,\n          [name]: \"\",\n        });\n      })\n\n      .catch((err) => {\n        setFormErrors({\n          ...formErrors,\n          [name]: err.errors[0],\n        });\n      });\n  };\n\n  const inputChange = (name, value) => {\n    validate(name, value);\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  const formSubmit = () => {\n    const newUser = {\n      username: formValues.username.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      fName: formValues.fName.trim(),\n      lName: formValues.lName.trim(),\n    };\n\n    postNewUser(newUser);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  useEffect(() => {\n    schema.isValid(formValues).then((valid) => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n\n    \n\n ///log in form \n  \n  //initial state\n  const [logInState, setLogInState] = useState({\n\n    username: \"\",\n    password:\"\",\n\n  });\n\n  //state for Errors\n  const [errors, setErrors] = useState({\n\n    username: \"\",\n    password:\"\",\n\n  });\n\n  //button state\nconst [buttonDisabled, setButtonDisabled] = useState(true);\n\nuseEffect(() => {\nformSchema.isValid(logInState).then(valid => {\n  setButtonDisabled(!valid)\n})\n},[logInState]);\n\n//post state\nconst [post, setPost] = useState([]);\n\n  return (\n   <>\n    <Route exact path=\"/\">\n    <LogIn \n    logInState={logInState}\n    setLogInState={setLogInState}\n    errors={errors}\n    setErrors={setErrors}\n    buttonDisabled={buttonDisabled}\n    post={post}\n    setPost={setPost}\n     />\n    </Route>\n\n    <Route path=\"/signup\">\n    <SignUp \n     users={users}\n          setUsers={setUsers}\n          formValues={formValues}\n          setFormValues={setFormValues}\n          formErrors={formErrors}\n          setFormErrors={setFormErrors}\n          disabled={disabled}\n          setDisabled={setDisabled}/>\n    </Route>\n\n  </>  \n\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}