{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Documents\\\\LambdaProjects\\\\React\\\\sleep-tracker\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport LogIn from \"./components/LogIn\";\nimport SignUp from \"./components/SignUp\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport \"./App.css\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport schema from \"./components/validation/signSchema\";\nconst initialFormValues = {\n  username: \"\",\n  email: \"\",\n  fName: \"\",\n  lName: \"\",\n  password: \"\"\n};\nconst initialFormErrors = {\n  username: \"\",\n  email: \"\",\n  fName: \"\",\n  lName: \"\",\n  password: \"\"\n};\nconst initialUsers = [];\nconst initialDisabled = true;\n\nfunction App() {\n  const [users, setUsers] = useState(initialUsers);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const getUsers = () => {\n    axios.get(\"https://reqres.in/api/users\").then(res => {\n      setUsers(res.data);\n    }).catch(err => {\n      debugger;\n      console.log(err);\n    });\n  };\n\n  const postNewUser = newUser => {\n    axios.post(\"https://lambda-bw-sleep-tracker.herokuapp.com/auth/signup\", newUser).then(res => {\n      setUsers([...users, res.data]);\n      setFormValues(initialFormValues);\n    }).catch(err => {\n      debugger;\n      console.log(err);\n    }).finally(() => {// this woudl be tbe good spot to clean the form\n    });\n  };\n\n  const validate = (name, value) => {\n    yup.reach(schema, name).validate(value).then(valid => {\n      setFormErrors({ ...formErrors,\n        [name]: \"\"\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n  };\n\n  const inputChange = (name, value) => {\n    validate(name, value);\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const formSubmit = () => {\n    const newUser = {\n      username: formValues.username.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      fName: formValues.fName.trim(),\n      lName: formValues.lName.trim()\n    };\n    postNewUser(newUser);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LogIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/SignUp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SignUp, {\n    users: users,\n    setUsers: setUsers,\n    formValues: formValues,\n    setFormValues: setFormValues,\n    formErrors: formErrors,\n    setFormErrors: setFormErrors,\n    disabled: disabled,\n    setDisabled: setDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Chris/Documents/LambdaProjects/React/sleep-tracker/src/App.js"],"names":["React","useState","useEffect","LogIn","SignUp","Route","useHistory","yup","axios","schema","initialFormValues","username","email","fName","lName","password","initialFormErrors","initialUsers","initialDisabled","App","users","setUsers","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","getUsers","get","then","res","data","catch","err","console","log","postNewUser","newUser","post","finally","validate","name","value","reach","valid","errors","inputChange","formSubmit","trim","isValid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport LogIn from \"./components/LogIn\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport schema from \"./components/validation/signSchema\";\r\n\r\nconst initialFormValues = {\r\n  username: \"\",\r\n  email: \"\",\r\n  fName: \"\",\r\n  lName: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst initialFormErrors = {\r\n  username: \"\",\r\n  email: \"\",\r\n  fName: \"\",\r\n  lName: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst initialUsers = [];\r\nconst initialDisabled = true;\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState(initialUsers);\r\n  const [formValues, setFormValues] = useState(initialFormValues);\r\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\r\n  const [disabled, setDisabled] = useState(initialDisabled);\r\n\r\n  const getUsers = () => {\r\n    axios\r\n      .get(\"https://reqres.in/api/users\")\r\n      .then((res) => {\r\n        setUsers(res.data);\r\n      })\r\n      .catch((err) => {\r\n        debugger;\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const postNewUser = (newUser) => {\r\n    axios\r\n      .post(\r\n        \"https://lambda-bw-sleep-tracker.herokuapp.com/auth/signup\",\r\n        newUser\r\n      )\r\n      .then((res) => {\r\n        setUsers([...users, res.data]);\r\n        setFormValues(initialFormValues);\r\n      })\r\n      .catch((err) => {\r\n        debugger;\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        // this woudl be tbe good spot to clean the form\r\n      });\r\n  };\r\n\r\n  const validate = (name, value) => {\r\n    yup\r\n      .reach(schema, name)\r\n\r\n      .validate(value)\r\n\r\n      .then((valid) => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          [name]: \"\",\r\n        });\r\n      })\r\n\r\n      .catch((err) => {\r\n        setFormErrors({\r\n          ...formErrors,\r\n          [name]: err.errors[0],\r\n        });\r\n      });\r\n  };\r\n\r\n  const inputChange = (name, value) => {\r\n    validate(name, value);\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const formSubmit = () => {\r\n    const newUser = {\r\n      username: formValues.username.trim(),\r\n      email: formValues.email.trim(),\r\n      password: formValues.password.trim(),\r\n      fName: formValues.fName.trim(),\r\n      lName: formValues.lName.trim(),\r\n    };\r\n\r\n    postNewUser(newUser);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    schema.isValid(formValues).then((valid) => {\r\n      setDisabled(!valid);\r\n    });\r\n  }, [formValues]);\r\n\r\n  return (\r\n    <>\r\n      <Route exact path=\"/\">\r\n        <LogIn />\r\n      </Route>\r\n\r\n      <Route path=\"/SignUp\">\r\n        <SignUp\r\n          users={users}\r\n          setUsers={setUsers}\r\n          formValues={formValues}\r\n          setFormValues={setFormValues}\r\n          formErrors={formErrors}\r\n          setFormErrors={setFormErrors}\r\n          disabled={disabled}\r\n          setDisabled={setDisabled}\r\n        />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}